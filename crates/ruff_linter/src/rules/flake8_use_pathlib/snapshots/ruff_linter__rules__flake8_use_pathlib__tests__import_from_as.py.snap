---
source: crates/ruff_linter/src/rules/flake8_use_pathlib/mod.rs
---
error[PTH100]: import_from_as.py:14:5: `os.path.abspath()` should be replaced by `Path.resolve()`

   |
12 | q = "bar"
13 | 
14 | a = xabspath(p)
   |     ^^^^^^^^
15 | aa = xchmod(p)
16 | aaa = xmkdir(p)
   |
error[PTH101]: import_from_as.py:15:6: `os.chmod()` should be replaced by `Path.chmod()`

   |
14 | a = xabspath(p)
15 | aa = xchmod(p)
   |      ^^^^^^
16 | aaa = xmkdir(p)
17 | xmakedirs(p)
   |
error[PTH102]: import_from_as.py:16:7: `os.mkdir()` should be replaced by `Path.mkdir()`

   |
14 | a = xabspath(p)
15 | aa = xchmod(p)
16 | aaa = xmkdir(p)
   |       ^^^^^^
17 | xmakedirs(p)
18 | xrename(p)
   |
error[PTH103]: import_from_as.py:17:1: `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`

   |
15 | aa = xchmod(p)
16 | aaa = xmkdir(p)
17 | xmakedirs(p)
   | ^^^^^^^^^
18 | xrename(p)
19 | xreplace(p)
   |
error[PTH104]: import_from_as.py:18:1: `os.rename()` should be replaced by `Path.rename()`

   |
16 | aaa = xmkdir(p)
17 | xmakedirs(p)
18 | xrename(p)
   | ^^^^^^^
19 | xreplace(p)
20 | xrmdir(p)
   |
error[PTH105]: import_from_as.py:19:1: `os.replace()` should be replaced by `Path.replace()`

   |
17 | xmakedirs(p)
18 | xrename(p)
19 | xreplace(p)
   | ^^^^^^^^
20 | xrmdir(p)
21 | xremove(p)
   |
error[PTH106]: import_from_as.py:20:1: `os.rmdir()` should be replaced by `Path.rmdir()`

   |
18 | xrename(p)
19 | xreplace(p)
20 | xrmdir(p)
   | ^^^^^^
21 | xremove(p)
22 | xunlink(p)
   |
error[PTH107]: import_from_as.py:21:1: `os.remove()` should be replaced by `Path.unlink()`

   |
19 | xreplace(p)
20 | xrmdir(p)
21 | xremove(p)
   | ^^^^^^^
22 | xunlink(p)
23 | xgetcwd(p)
   |
error[PTH108]: import_from_as.py:22:1: `os.unlink()` should be replaced by `Path.unlink()`

   |
20 | xrmdir(p)
21 | xremove(p)
22 | xunlink(p)
   | ^^^^^^^
23 | xgetcwd(p)
24 | b = xexists(p)
   |
error[PTH109]: import_from_as.py:23:1: `os.getcwd()` should be replaced by `Path.cwd()`

   |
21 | xremove(p)
22 | xunlink(p)
23 | xgetcwd(p)
   | ^^^^^^^
24 | b = xexists(p)
25 | bb = xexpanduser(p)
   |
error[PTH110]: import_from_as.py:24:5: `os.path.exists()` should be replaced by `Path.exists()`

   |
22 | xunlink(p)
23 | xgetcwd(p)
24 | b = xexists(p)
   |     ^^^^^^^
25 | bb = xexpanduser(p)
26 | bbb = xisdir(p)
   |
error[PTH111]: import_from_as.py:25:6: `os.path.expanduser()` should be replaced by `Path.expanduser()`

   |
23 | xgetcwd(p)
24 | b = xexists(p)
25 | bb = xexpanduser(p)
   |      ^^^^^^^^^^^
26 | bbb = xisdir(p)
27 | bbbb = xisfile(p)
   |
error[PTH112]: import_from_as.py:26:7: `os.path.isdir()` should be replaced by `Path.is_dir()`

   |
24 | b = xexists(p)
25 | bb = xexpanduser(p)
26 | bbb = xisdir(p)
   |       ^^^^^^
27 | bbbb = xisfile(p)
28 | bbbbb = xislink(p)
   |
error[PTH113]: import_from_as.py:27:8: `os.path.isfile()` should be replaced by `Path.is_file()`

   |
25 | bb = xexpanduser(p)
26 | bbb = xisdir(p)
27 | bbbb = xisfile(p)
   |        ^^^^^^^
28 | bbbbb = xislink(p)
29 | xreadlink(p)
   |
error[PTH114]: import_from_as.py:28:9: `os.path.islink()` should be replaced by `Path.is_symlink()`

   |
26 | bbb = xisdir(p)
27 | bbbb = xisfile(p)
28 | bbbbb = xislink(p)
   |         ^^^^^^^
29 | xreadlink(p)
30 | xstat(p)
   |
error[PTH115]: import_from_as.py:29:1: `os.readlink()` should be replaced by `Path.readlink()`

   |
27 | bbbb = xisfile(p)
28 | bbbbb = xislink(p)
29 | xreadlink(p)
   | ^^^^^^^^^
30 | xstat(p)
31 | xisabs(p)
   |
error[PTH116]: import_from_as.py:30:1: `os.stat()` should be replaced by `Path.stat()`, `Path.owner()`, or `Path.group()`

   |
28 | bbbbb = xislink(p)
29 | xreadlink(p)
30 | xstat(p)
   | ^^^^^
31 | xisabs(p)
32 | xjoin(p, q)
   |
error[PTH117]: import_from_as.py:31:1: `os.path.isabs()` should be replaced by `Path.is_absolute()`

   |
29 | xreadlink(p)
30 | xstat(p)
31 | xisabs(p)
   | ^^^^^^
32 | xjoin(p, q)
33 | s.join((p, q))
   |
error[PTH118]: import_from_as.py:32:1: `os.path.join()` should be replaced by `Path` with `/` operator

   |
30 | xstat(p)
31 | xisabs(p)
32 | xjoin(p, q)
   | ^^^^^
33 | s.join((p, q))
34 | s.join([p, q])
   |
error[PTH118]: import_from_as.py:33:1: `os.sep.join()` should be replaced by `Path` with `/` operator

   |
31 | xisabs(p)
32 | xjoin(p, q)
33 | s.join((p, q))
   | ^^^^^^
34 | s.join([p, q])
35 | xbasename(p)
   |
error[PTH118]: import_from_as.py:34:1: `os.sep.join()` should be replaced by `Path` with `/` operator

   |
32 | xjoin(p, q)
33 | s.join((p, q))
34 | s.join([p, q])
   | ^^^^^^
35 | xbasename(p)
36 | xdirname(p)
   |
error[PTH119]: import_from_as.py:35:1: `os.path.basename()` should be replaced by `Path.name`

   |
33 | s.join((p, q))
34 | s.join([p, q])
35 | xbasename(p)
   | ^^^^^^^^^
36 | xdirname(p)
37 | xsamefile(p)
   |
error[PTH120]: import_from_as.py:36:1: `os.path.dirname()` should be replaced by `Path.parent`

   |
34 | s.join([p, q])
35 | xbasename(p)
36 | xdirname(p)
   | ^^^^^^^^
37 | xsamefile(p)
38 | xsplitext(p)
   |
error[PTH121]: import_from_as.py:37:1: `os.path.samefile()` should be replaced by `Path.samefile()`

   |
35 | xbasename(p)
36 | xdirname(p)
37 | xsamefile(p)
   | ^^^^^^^^^
38 | xsplitext(p)
   |
error[PTH122]: import_from_as.py:38:1: `os.path.splitext()` should be replaced by `Path.suffix`, `Path.stem`, and `Path.parent`

   |
36 | xdirname(p)
37 | xsamefile(p)
38 | xsplitext(p)
   | ^^^^^^^^^
   |
